{"ast":null,"code":"import axios from \"axios\";\nconst url = 'http://localhost:8080/contact';\n\nclass contactService {\n  constructor() {\n    this.get = async () => {\n      let result = await axios.get(`${url}/get`);\n      return result.data.result;\n    };\n\n    this.getById = async id => {\n      let result = await axios.get(`${url}/getById`, {\n        params: {\n          id\n        }\n      });\n      return result.data.result;\n    };\n\n    this.post = async contact => {\n      let result = await axios.post(`${url}/post`, contact);\n      return result.data.result;\n    };\n\n    this.put = async contact => {\n      let result = await axios.put(`${url}/put`, contact);\n      return result.data.result;\n    };\n\n    this.deleted = async id => {\n      let result = await axios.delete(`${url}/delete`, {\n        params: {\n          id\n        }\n      });\n      return result.data.result;\n    };\n\n    this.pictureUrl = url => {\n      return `https://randomuser.me/api/portraits/${url}.jpg`;\n    };\n\n    this.genragePictureUrl = async () => {\n      let number = Math.floor(Math.random() * 100);\n      let g = Math.floor(Math.random() * 2);\n      let gender = g == 0 ? 'men' : 'women';\n      return `${gender}/${number}`;\n    };\n\n    this.randomContact = async () => {\n      let result = await axios.get('https://randomuser.me/api');\n      result = result.data.results[0];\n      let newContact = {\n        name: `${result.name.first} ${result.name.last}`,\n        title: result.name.title,\n        phone: result.phone\n      };\n      newContact.imageUrl = await this.genragePictureUrl();\n      return newContact;\n    };\n  }\n\n}\n\nexport default new contactService();","map":{"version":3,"names":["axios","url","contactService","get","result","data","getById","id","params","post","contact","put","deleted","delete","pictureUrl","genragePictureUrl","number","Math","floor","random","g","gender","randomContact","results","newContact","name","first","last","title","phone","imageUrl"],"sources":["D:/myJob/חיפוש עבודה/‏‏תיקיה חדש3/one1Exam/client/src/services/contactService.js"],"sourcesContent":["import axios from \"axios\";\r\nconst url = 'http://localhost:8080/contact'\r\nclass contactService {\r\n\r\n  get = async () => {\r\n    let result = await axios.get(`${url}/get`);\r\n    return result.data.result;\r\n  }\r\n  getById = async (id) => {\r\n    let result = await axios.get(`${url}/getById`, { params: { id } });\r\n    return result.data.result;\r\n  }\r\n\r\n  post = async (contact) => {\r\n    let result = await axios.post(`${url}/post`, contact);\r\n    return result.data.result;\r\n  }\r\n\r\n  put = async (contact) => {\r\n    let result = await axios.put(`${url}/put`, contact);\r\n    return result.data.result;\r\n  }\r\n\r\n  deleted = async (id) => {\r\n    let result = await axios.delete(`${url}/delete`, {params:{id}});\r\n    return result.data.result;\r\n  }\r\n  pictureUrl = (url) => {\r\n    return `https://randomuser.me/api/portraits/${url}.jpg`\r\n  }\r\n\r\n  genragePictureUrl = async () => {\r\n    let number = Math.floor(Math.random() * 100);\r\n    let g=Math.floor(Math.random() * 2);\r\n    let gender=g==0?'men':'women';\r\n    return `${gender}/${number}`;\r\n  }\r\n\r\n  randomContact=async()=>{\r\n    let result=await axios.get('https://randomuser.me/api');\r\n    result=result.data.results[0];\r\n    let newContact={name:`${result.name.first} ${result.name.last}`,title:result.name.title,phone:result.phone};\r\n    newContact.imageUrl=await this.genragePictureUrl();\r\n    return newContact;\r\n  }\r\n}\r\nexport default new contactService();"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAG,+BAAZ;;AACA,MAAMC,cAAN,CAAqB;EAAA;IAAA,KAEnBC,GAFmB,GAEb,YAAY;MAChB,IAAIC,MAAM,GAAG,MAAMJ,KAAK,CAACG,GAAN,CAAW,GAAEF,GAAI,MAAjB,CAAnB;MACA,OAAOG,MAAM,CAACC,IAAP,CAAYD,MAAnB;IACD,CALkB;;IAAA,KAMnBE,OANmB,GAMT,MAAOC,EAAP,IAAc;MACtB,IAAIH,MAAM,GAAG,MAAMJ,KAAK,CAACG,GAAN,CAAW,GAAEF,GAAI,UAAjB,EAA4B;QAAEO,MAAM,EAAE;UAAED;QAAF;MAAV,CAA5B,CAAnB;MACA,OAAOH,MAAM,CAACC,IAAP,CAAYD,MAAnB;IACD,CATkB;;IAAA,KAWnBK,IAXmB,GAWZ,MAAOC,OAAP,IAAmB;MACxB,IAAIN,MAAM,GAAG,MAAMJ,KAAK,CAACS,IAAN,CAAY,GAAER,GAAI,OAAlB,EAA0BS,OAA1B,CAAnB;MACA,OAAON,MAAM,CAACC,IAAP,CAAYD,MAAnB;IACD,CAdkB;;IAAA,KAgBnBO,GAhBmB,GAgBb,MAAOD,OAAP,IAAmB;MACvB,IAAIN,MAAM,GAAG,MAAMJ,KAAK,CAACW,GAAN,CAAW,GAAEV,GAAI,MAAjB,EAAwBS,OAAxB,CAAnB;MACA,OAAON,MAAM,CAACC,IAAP,CAAYD,MAAnB;IACD,CAnBkB;;IAAA,KAqBnBQ,OArBmB,GAqBT,MAAOL,EAAP,IAAc;MACtB,IAAIH,MAAM,GAAG,MAAMJ,KAAK,CAACa,MAAN,CAAc,GAAEZ,GAAI,SAApB,EAA8B;QAACO,MAAM,EAAC;UAACD;QAAD;MAAR,CAA9B,CAAnB;MACA,OAAOH,MAAM,CAACC,IAAP,CAAYD,MAAnB;IACD,CAxBkB;;IAAA,KAyBnBU,UAzBmB,GAyBLb,GAAD,IAAS;MACpB,OAAQ,uCAAsCA,GAAI,MAAlD;IACD,CA3BkB;;IAAA,KA6BnBc,iBA7BmB,GA6BC,YAAY;MAC9B,IAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;MACA,IAAIC,CAAC,GAACH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAN;MACA,IAAIE,MAAM,GAACD,CAAC,IAAE,CAAH,GAAK,KAAL,GAAW,OAAtB;MACA,OAAQ,GAAEC,MAAO,IAAGL,MAAO,EAA3B;IACD,CAlCkB;;IAAA,KAoCnBM,aApCmB,GAoCL,YAAS;MACrB,IAAIlB,MAAM,GAAC,MAAMJ,KAAK,CAACG,GAAN,CAAU,2BAAV,CAAjB;MACAC,MAAM,GAACA,MAAM,CAACC,IAAP,CAAYkB,OAAZ,CAAoB,CAApB,CAAP;MACA,IAAIC,UAAU,GAAC;QAACC,IAAI,EAAE,GAAErB,MAAM,CAACqB,IAAP,CAAYC,KAAM,IAAGtB,MAAM,CAACqB,IAAP,CAAYE,IAAK,EAA/C;QAAiDC,KAAK,EAACxB,MAAM,CAACqB,IAAP,CAAYG,KAAnE;QAAyEC,KAAK,EAACzB,MAAM,CAACyB;MAAtF,CAAf;MACAL,UAAU,CAACM,QAAX,GAAoB,MAAM,KAAKf,iBAAL,EAA1B;MACA,OAAOS,UAAP;IACD,CA1CkB;EAAA;;AAAA;;AA4CrB,eAAe,IAAItB,cAAJ,EAAf"},"metadata":{},"sourceType":"module"}