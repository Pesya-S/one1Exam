{"ast":null,"code":"import contactService from \"../services/contactService\";\nexport const type = {\n  get: 'getContact',\n  post: 'postContact',\n  fill: 'fillContact'\n};\nconst initilize = [];\nexport const contacts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initilize;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case type.get:\n      return state;\n\n    case type.post:\n      return [...state, action.payload];\n\n    case type.fill:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}; // actions\n\nexport const contactAction_get = () => {\n  return async (dispatch, getState) => {\n    let list = getState().contactsList;\n    if (list && list.length > 0) return type.get;\n\n    if (list === undefined || list.length === 0) {\n      let result = await contactService.get();\n      dispatch({\n        type: type.fill,\n        payload: result\n      });\n    }\n  };\n};\nexport const contactAction_post = contact => {\n  return async dispatch => {\n    let result = await contactService.post(contact);\n    contact.id = result.insertId;\n    dispatch({\n      type: type.post,\n      payload: contact\n    });\n  };\n};\nexport const contactAction_edit = (contact, cb) => {\n  return async (dispatch, getState) => {\n    let result = await contactService.put(contact);\n    let list = getState().contactsList;\n    let i = list.findIndex(x => x.id == contact.id);\n    list[i] = contact;\n    dispatch({\n      type: type.fill,\n      payload: list\n    });\n    cb();\n  };\n};\nexport const contactAction_delete = contact => {\n  return async (dispatch, getState) => {\n    let result = await contactService.deleted(contact.id);\n    let list = getState().contactsList;\n    list = list.filter(x => x.id != contact.id);\n    dispatch({\n      type: type.fill,\n      payload: list\n    });\n  };\n};\nexport const contactAction_getById = (id, list) => {// let result=await contactService.getById(id);\n};","map":{"version":3,"names":["contactService","type","get","post","fill","initilize","contacts","state","action","payload","contactAction_get","dispatch","getState","list","contactsList","length","undefined","result","contactAction_post","contact","id","insertId","contactAction_edit","cb","put","i","findIndex","x","contactAction_delete","deleted","filter","contactAction_getById"],"sources":["D:/myJob/חיפוש עבודה/one1Exam/client/src/store/contactReducer.js"],"sourcesContent":["import contactService from \"../services/contactService\";\r\n\r\n\r\nexport const type = {\r\n    get: 'getContact', post: 'postContact', fill: 'fillContact'\r\n};\r\n\r\n\r\nconst initilize = [];\r\n\r\nexport const contacts = (state = initilize, action) => {\r\n    switch (action.type) {\r\n        case type.get: return state;\r\n        case type.post: return [...state, action.payload];\r\n        case type.fill: return action.payload;\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n// actions\r\nexport const contactAction_get = () => {\r\n    return async (dispatch,getState) => {\r\n        let list=getState().contactsList;\r\n        if (list && list.length > 0)\r\n            return type.get\r\n        if (list === undefined || list.length === 0) {\r\n            let result = await contactService.get();\r\n            dispatch({ type: type.fill, payload: result });\r\n        }\r\n    }\r\n}\r\nexport const contactAction_post = (contact) => {\r\n    return async (dispatch) => {\r\n        let result = await contactService.post(contact);\r\n        contact.id = result.insertId;\r\n        dispatch({ type: type.post, payload: contact })\r\n    }\r\n}\r\nexport const contactAction_edit=(contact,cb)=>{\r\n    return async (dispatch,getState) => {\r\n        let result = await contactService.put(contact);\r\n        let list=getState().contactsList;\r\n        let i=list.findIndex(x=>x.id==contact.id)\r\n        list[i]=contact;\r\n        dispatch({ type: type.fill, payload: list });\r\n        cb();\r\n    }\r\n}\r\n\r\nexport const contactAction_delete=(contact)=>{\r\n    return async (dispatch,getState) => {\r\n        let result = await contactService.deleted(contact.id);\r\n        let list=getState().contactsList;\r\n        list=list.filter(x=>x.id!=contact.id)\r\n        dispatch({ type: type.fill, payload: list })\r\n    }\r\n}\r\nexport const contactAction_getById=(id,list)=>{\r\n    // let result=await contactService.getById(id);\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}