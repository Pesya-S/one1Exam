{"ast":null,"code":"import axios from \"axios\";\nconst url = 'http://localhost:8080/contact';\n\nclass contactService {\n  constructor() {\n    this.get = async () => {\n      let result = await axios.get(`${url}/get`);\n      return result.data;\n    };\n\n    this.getById = async id => {\n      let result = await axios.get(`${url}/getById`, {\n        params: {\n          id\n        }\n      });\n      return result.data;\n    };\n\n    this.post = async contact => {\n      let result = await axios.post(`${url}/post`, contact);\n      return result.data;\n    };\n\n    this.put = async contact => {\n      let result = await axios.put(`${url}/put`, contact);\n      return result.data;\n    };\n\n    this.deleted = async id => {\n      let result = await axios.delete(`${url}/delete`, {\n        params: {\n          id\n        }\n      });\n      return result.data;\n    };\n\n    this.pictureUrl = url => {\n      return `https://randomuser.me/api/portraits/${url}.jpg`;\n    };\n\n    this.getPictureId = async () => {\n      let number = Math.floor(Math.random() * 100);\n      let g = Math.floor(Math.random() * 2);\n      return number;\n    };\n  }\n\n}\n\nexport default new contactService();","map":{"version":3,"names":["axios","url","contactService","get","result","data","getById","id","params","post","contact","put","deleted","delete","pictureUrl","getPictureId","number","Math","floor","random","g"],"sources":["D:/myJob/חיפוש עבודה/one1Exam/client/src/services/contactService.js"],"sourcesContent":["import axios from \"axios\";\r\nconst url = 'http://localhost:8080/contact'\r\nclass contactService {\r\n\r\n  get = async () => {\r\n    let result = await axios.get(`${url}/get`);\r\n    return result.data;\r\n  }\r\n  getById = async (id) => {\r\n    let result = await axios.get(`${url}/getById`, { params: { id } });\r\n    return result.data;\r\n  }\r\n\r\n  post = async (contact) => {\r\n    let result = await axios.post(`${url}/post`, contact);\r\n    return result.data;\r\n  }\r\n\r\n  put = async (contact) => {\r\n    let result = await axios.put(`${url}/put`, contact);\r\n    return result.data;\r\n  }\r\n\r\n  deleted = async (id) => {\r\n    let result = await axios.delete(`${url}/delete`, {params:{id}});\r\n    return result.data;\r\n  }\r\n  pictureUrl = (url) => {\r\n    return `https://randomuser.me/api/portraits/${url}.jpg`\r\n  }\r\n\r\n  getPictureId = async () => {\r\n    let number = Math.floor(Math.random() * 100);\r\n    let g=Math.floor(Math.random() * 2);\r\n    return number;\r\n  }\r\n}\r\nexport default new contactService();"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAG,+BAAZ;;AACA,MAAMC,cAAN,CAAqB;EAAA;IAAA,KAEnBC,GAFmB,GAEb,YAAY;MAChB,IAAIC,MAAM,GAAG,MAAMJ,KAAK,CAACG,GAAN,CAAW,GAAEF,GAAI,MAAjB,CAAnB;MACA,OAAOG,MAAM,CAACC,IAAd;IACD,CALkB;;IAAA,KAMnBC,OANmB,GAMT,MAAOC,EAAP,IAAc;MACtB,IAAIH,MAAM,GAAG,MAAMJ,KAAK,CAACG,GAAN,CAAW,GAAEF,GAAI,UAAjB,EAA4B;QAAEO,MAAM,EAAE;UAAED;QAAF;MAAV,CAA5B,CAAnB;MACA,OAAOH,MAAM,CAACC,IAAd;IACD,CATkB;;IAAA,KAWnBI,IAXmB,GAWZ,MAAOC,OAAP,IAAmB;MACxB,IAAIN,MAAM,GAAG,MAAMJ,KAAK,CAACS,IAAN,CAAY,GAAER,GAAI,OAAlB,EAA0BS,OAA1B,CAAnB;MACA,OAAON,MAAM,CAACC,IAAd;IACD,CAdkB;;IAAA,KAgBnBM,GAhBmB,GAgBb,MAAOD,OAAP,IAAmB;MACvB,IAAIN,MAAM,GAAG,MAAMJ,KAAK,CAACW,GAAN,CAAW,GAAEV,GAAI,MAAjB,EAAwBS,OAAxB,CAAnB;MACA,OAAON,MAAM,CAACC,IAAd;IACD,CAnBkB;;IAAA,KAqBnBO,OArBmB,GAqBT,MAAOL,EAAP,IAAc;MACtB,IAAIH,MAAM,GAAG,MAAMJ,KAAK,CAACa,MAAN,CAAc,GAAEZ,GAAI,SAApB,EAA8B;QAACO,MAAM,EAAC;UAACD;QAAD;MAAR,CAA9B,CAAnB;MACA,OAAOH,MAAM,CAACC,IAAd;IACD,CAxBkB;;IAAA,KAyBnBS,UAzBmB,GAyBLb,GAAD,IAAS;MACpB,OAAQ,uCAAsCA,GAAI,MAAlD;IACD,CA3BkB;;IAAA,KA6BnBc,YA7BmB,GA6BJ,YAAY;MACzB,IAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;MACA,IAAIC,CAAC,GAACH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAN;MACA,OAAOH,MAAP;IACD,CAjCkB;EAAA;;AAAA;;AAmCrB,eAAe,IAAId,cAAJ,EAAf"},"metadata":{},"sourceType":"module"}